Index: iproute2-5.5.0/include/uapi/linux/pkt_sched.h
===================================================================
--- iproute2-5.5.0.orig/include/uapi/linux/pkt_sched.h
+++ iproute2-5.5.0/include/uapi/linux/pkt_sched.h
@@ -395,6 +395,7 @@ struct tc_htb_opt {
 	__u32	quantum;
 	__u32	level;		/* out only */
 	__u32	prio;
+	__u32 shared;
 };
 struct tc_htb_glob {
 	__u32 version;		/* to match HTB/TC */
Index: iproute2-5.5.0/tc/q_htb.c
===================================================================
--- iproute2-5.5.0.orig/tc/q_htb.c
+++ iproute2-5.5.0/tc/q_htb.c
@@ -131,6 +131,11 @@ static int htb_parse_class_opt(struct qd
 			if (get_u32(&mtu, *argv, 10)) {
 				explain1("mtu"); return -1;
 			}
+		} else if (matches(*argv, "shared") == 0) {
+			NEXT_ARG();
+			if (get_u32(&opt.shared, *argv, 10)) {
+				explain1("shared"); return -1;
+			}
 		} else if (matches(*argv, "mpu") == 0) {
 			NEXT_ARG();
 			if (get_u16(&mpu, *argv, 10)) {
@@ -208,6 +213,11 @@ static int htb_parse_class_opt(struct qd
 		argc--; argv++;
 	}
 
+	if (opt.shared > 15) {
+		fprintf(stderr, "\"shared\" only allowed between 0 and 15.\n");
+		return -1;
+	}
+
 	if (!rate64) {
 		fprintf(stderr, "\"rate\" is required.\n");
 		return -1;
@@ -326,6 +336,7 @@ static int htb_print_opt(struct qdisc_ut
 		if (show_raw)
 			fprintf(f, "buffer [%08x] cbuffer [%08x] ",
 				hopt->buffer, hopt->cbuffer);
+		fprintf(f, "shared %u ", hopt->shared);
 	}
 	if (tb[TCA_HTB_INIT]) {
 		gopt = RTA_DATA(tb[TCA_HTB_INIT]);
